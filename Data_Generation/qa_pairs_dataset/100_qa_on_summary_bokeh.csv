user_input,reference_contexts,reference,synthesizer_name
What were the key features introduced in Version 3.0 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.3 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 of the Bokeh library introduced the ColorMap widget, enhancing the usability of AutocompleteInput by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
What are the key features introduced in Bokeh Version 3.4?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.4 added significant features like math text glyphs and click events on categorical axes.,single_hop_specifc_query_synthesizer
What updates were introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9.",single_hop_specifc_query_synthesizer
What are the key updates in Bokeh version 3.6?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.6, released on 2024-09-26, includes key updates such as support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.2 of the Bokeh library focused on WebGL support for several glyphs and ES module callback support.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 of the Bokeh library introduced a new Carbon theme, further enhanced math text and click event support, and dropped support for Python 3.9.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Bokeh version 3.6?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.6 introduced several key updates, including support for click events on categorical axes, the addition of CustomJSTicker for greater customization of axis tick formatting, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.3 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 introduced the ColorMap widget, enhancing AutocompleteInput usability by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.3 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 introduced the ColorMap widget, enhancing AutocompleteInput usability by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.4 of the Bokeh library introduced significant features such as math text glyphs and click events on categorical axes, enhancing the interactivity and presentation capabilities of visualizations.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 of the Bokeh library introduced a new Carbon theme, further enhanced math text and click event support, and dropped support for Python 3.9.",single_hop_specifc_query_synthesizer
What are the key updates in Bokeh version 3.6?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Key updates in Bokeh version 3.6 include support for click events on categorical axes, the addition of CustomJSTicker, and the introduction of an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What key features were introduced in Bokeh Version 2.4?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
What significant features were introduced in Version 2.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 of the Bokeh library brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
Wht are the key updates in Bokeh Version 3.6?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Key updates in Bokeh Version 3.6 include support for click events on categorical axes, the addition of CustomJSTicker, and the introduction of an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
"What significant features were introduced in Version 2.2 of the Bokeh library, and how do they contribute to data visualization?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 2.2 of the Bokeh library introduced SVG export for grid plots and a DocumentReady event. The SVG export feature allows for high-quality vector graphics output, which is essential for creating scalable and print-ready visualizations. The DocumentReady event enhances the interactivity and usability of visualizations by ensuring that the document is fully loaded before any scripts are executed, thus improving the overall user experience.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.3 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 introduced the ColorMap widget, enhancing AutocompleteInput usability by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
What significant features were introduced in Version 2.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 of the Bokeh library brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
"What significant changes were introduced in Version 3.0 of the Bokeh library, particularly regarding interactivity and rendering capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 of the Bokeh library marked a major milestone with the introduction of support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Additionally, it added support for click events on categorical axes, enhancing interactivity within visualizations.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.3 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 of the Bokeh library introduced the ColorMap widget, which simplifies the selection of color palettes, and enhanced the usability of AutocompleteInput by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
"What are the key updates in the latest version of Bokeh, specifically version 3.6?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","The key updates in Bokeh version 3.6 include support for click events on categorical axes, the addition of CustomJSTicker, and the introduction of an 'open image in a new tab' mode for the save tool. These updates continue to enhance the performance, usability, and capabilities of Bokeh in handling various types of data and visualizations.",single_hop_specifc_query_synthesizer
Wut are the key features introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.2 focused on WebGL support for several glyphs and ES module callback support.,single_hop_specifc_query_synthesizer
What key features were introduced in Bokeh version 2.4?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 of the Bokeh library brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.1 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 added persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
What new features does Bokeh 3.6 have?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh 3.6 includes support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.0 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
"What significant features were introduced in Version 3.3 of the Bokeh library, and how do they enhance data visualization?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 of the Bokeh library introduced the ColorMap widget, which simplifies the selection of color palettes, and enhanced the usability of the AutocompleteInput by allowing matching on any part of input items. These features improve the interactivity and accessibility of visualizations, making it easier for developers to create engaging and user-friendly data presentations.",single_hop_specifc_query_synthesizer
What updates were introduced in Version 2.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
What significant features were introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 of the Bokeh library introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
What updates were introduced in Version 2.4 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.2 focused on WebGL support for several glyphs and ES module callback support.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Bokeh version 3.1?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 added persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.3 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 of the Bokeh library introduced the ColorMap widget, which simplifies the selection of color palettes, and enhanced the usability of the AutocompleteInput by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.0 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
What updates were introduced in Version 3.1 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 added persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.1 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 added persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
What features were introduced in Version 2.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.2 focused on WebGL support for several glyphs and ES module callback support.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.2 focused on WebGL support for several glyphs and ES module callback support.,single_hop_specifc_query_synthesizer
What are the key features introduced in Bokeh version 3.1 that a Data Visualization Developer should be aware of?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.1 introduced several key features, including persistent selection overlays and background/border support for text glyphs. These enhancements improve the interactivity and visual appeal of data visualizations, making it easier for developers to create engaging and informative graphics.",single_hop_specifc_query_synthesizer
What were the key features introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
Wht are the key updates in Bokeh Version 3.6?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Key updates in Bokeh Version 3.6 include support for click events on categorical axes, the addition of CustomJSTicker, and the introduction of an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What significant features were introduced in Version 2.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 of the Bokeh library brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
"What are the key features introduced in Version 3.2 of the Bokeh library, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.2 of the Bokeh library introduced several key features that significantly enhance data visualization capabilities. Notably, it focused on WebGL support for various glyphs, which improves performance when handling large datasets. Additionally, it added support for ES module syntax in callbacks, which enhances code maintainability and allows for better integration with modern JavaScript practices. These updates contribute to a more efficient and effective data visualization experience.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9.",single_hop_specifc_query_synthesizer
What features were added in Version 3.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.4 added significant features like math text glyphs and click events on categorical axes.,single_hop_specifc_query_synthesizer
What significant features were added in Version 3.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.4 added significant features like math text glyphs and click events on categorical axes.,single_hop_specifc_query_synthesizer
What important changes were made in Version 3.0 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
"What significant features were introduced in Version 2.4 of the Bokeh library, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 2.4 of the Bokeh library introduced consolidated RangeUpdate events and LaTeX support for axis labels. These features enhance data visualization capabilities by allowing for more efficient updates to the range of data displayed and enabling the use of LaTeX for rendering mathematical expressions on axis labels, thus improving the presentation of complex data.",single_hop_specifc_query_synthesizer
What features were introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 of the Bokeh library introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
What are the key features introduced in Bokeh version 3.2 that a Data Visualization Developer should be aware of?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.2 introduced significant features including WebGL support for several glyphs, enhancing performance for large datasets, and ES module callback support, which improves code maintainability and integration with modern JavaScript practices.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.2 of the Bokeh library focused on WebGL support for several glyphs and ES module callback support. This version enhanced the performance of visualizations by allowing the use of WebGL for rendering certain glyphs, which is particularly beneficial for large datasets. Additionally, it introduced support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices.",single_hop_specifc_query_synthesizer
Wut are the key features introduced in Version 2.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
What significant changes were introduced in Version 3.0 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9.",single_hop_specifc_query_synthesizer
What significant features were introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 of the Bokeh library introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
What updates were introduced in Version 3.1 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 added persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
What significant features were introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 of the Bokeh library introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
Wht are the key features of Version 3.4 in Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.4 added significant features like math text glyphs and click events on categorical axes.,single_hop_specifc_query_synthesizer
"What are the key features introduced in Bokeh version 3.4, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.4 introduced significant features such as math text glyphs and click events on categorical axes. The addition of math text glyphs enables LaTeX rendering in various parts of the plot, enhancing the presentation of mathematical expressions. The support for click events on categorical axes improves interactivity, allowing users to engage with the visualizations more effectively.",single_hop_specifc_query_synthesizer
What significant feature was introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
What are the key updates in the latest version of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","The key updates in the latest version of Bokeh (3.6) include support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What features were introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
What significant changes were introduced in Version 3.0 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
What are the key updates in the latest version of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","The latest version of Bokeh, 3.6, released on 2024-09-26, includes several key updates: support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool. Other significant changes throughout the versions include major redesigns of the layout system, SVG export for grid plots, persistent selection overlays, WebGL support for glyphs, and enhanced usability features like the ColorMap widget and improved AutocompleteInput.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9.",single_hop_specifc_query_synthesizer
"What significant features were introduced in Version 3.4 of the Bokeh library, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.4 of the Bokeh library introduced significant features such as math text glyphs and click events on categorical axes. The addition of math text glyphs enables LaTeX rendering in various parts of the plot, enhancing the ability to present mathematical expressions clearly. The support for click events on categorical axes enhances interactivity, allowing users to engage with the visualizations more effectively by responding to user actions.",single_hop_specifc_query_synthesizer
"What are the key updates introduced in the latest version of Bokeh, specifically version 3.6?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","The key updates in Bokeh version 3.6 include support for click events on categorical axes, the addition of CustomJSTicker, and the introduction of an 'open image in a new tab' mode for the save tool. These updates continue to enhance the library's capabilities in handling various types of data and visualizations.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.1 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 of the Bokeh library introduced persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Bokeh version 3.6?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.6, released on 2024-09-26, introduced several key updates including support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.0 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
What are the key features introduced in Bokeh Version 3.3?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 introduced the ColorMap widget, enhancing the selection of color palettes, and improved the usability of AutocompleteInput by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
What significant features were introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 of the Bokeh library introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.1 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 of the Bokeh library introduced persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
What new features does Bokeh version 3.6 include?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.6 includes support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.6 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.6 of the Bokeh library, released on 2024-09-26, introduced several key updates including support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool. These updates continue to enhance the performance, usability, and capabilities of Bokeh in handling various types of data and visualizations.",single_hop_specifc_query_synthesizer
What significant features were introduced in Version 2.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels.,single_hop_specifc_query_synthesizer
What are the key features introduced in Bokeh version 3.2?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.2 of Bokeh focused on WebGL support for several glyphs and ES module callback support, enhancing performance and code maintainability.",single_hop_specifc_query_synthesizer
What are the key features introduced in Bokeh version 3.3 that a Data Visualization Developer should be aware of?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.3 introduced several key features that are important for a Data Visualization Developer. Notably, it added the ColorMap widget, which simplifies the selection of color palettes, and enhanced the usability of the AutocompleteInput by allowing matching on any part of input items. These updates contribute to improved interactivity and accessibility in visualizations.",single_hop_specifc_query_synthesizer
What significant features were introduced in Version 3.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.4 of the Bokeh library added significant features such as math text glyphs and click events on categorical axes.,single_hop_specifc_query_synthesizer
What new features were introduced in Version 3.3 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 introduced the ColorMap widget, which simplifies the selection of color palettes, and enhanced the usability of AutocompleteInput by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.4 of the Bokeh library added significant features like math text glyphs and click events on categorical axes.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.4 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.4 added significant features like math text glyphs and click events on categorical axes.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.6 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.6 of the Bokeh library introduced several key updates, including support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 of the Bokeh library introduced several key updates, including a new Carbon theme, enhanced support for math text and click events, and the removal of support for Python 3.9. These changes aimed to improve the overall functionality and user experience of the library.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Bokeh Version 3.6?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh Version 3.6, released on 2024-09-26, introduced several key updates including support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool. These updates enhance interactivity and customization in data visualizations.",single_hop_specifc_query_synthesizer
"What are the key updates introduced in the latest version 3.6 of the Bokeh library, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","The latest version 3.6 of the Bokeh library, released on 2024-09-26, introduced several key updates that enhance data visualization capabilities. Notably, it added support for click events on categorical axes, allowing for greater interactivity in visualizations. Additionally, the CustomJSTicker feature was introduced, enabling more customization of axis tick formatting. Another significant update was the addition of an 'open image in a new tab' mode to the save tool, improving the usability of saved visualizations. These updates build on previous enhancements, such as improved layout responsiveness, WebGL support for glyphs, and accessibility features, all aimed at extending Bokeh's capabilities in handling various types of data and visualizations.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.0 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.2 of the Bokeh library focused on WebGL support for several glyphs and ES module callback support, enhancing performance and code maintainability.",single_hop_specifc_query_synthesizer
What are the key features introduced in Bokeh version 3.4?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.4 introduced significant features such as math text glyphs and click events on categorical axes, enhancing interactivity and the ability to render LaTeX in plots.",single_hop_specifc_query_synthesizer
"What are the key updates introduced in Version 3.6 of the Bokeh library, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.6 of the Bokeh library, released on 2024-09-26, introduced several key updates that enhance data visualization capabilities. Notably, it added support for click events on categorical axes, allowing for greater interactivity in visualizations. Additionally, the introduction of the CustomJSTicker enables users to customize axis tick formatting, providing more flexibility in data presentation. Another significant enhancement is the 'open image in a new tab' mode for the save tool, which improves the usability of saving visualizations. These updates build on previous versions' features, focusing on improving performance, usability, and extending Bokeh's capabilities in handling various types of data and visualizations.",single_hop_specifc_query_synthesizer
"What are the key updates introduced in Bokeh version 3.6, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.6, released on 2024-09-26, introduced several key updates that enhance data visualization capabilities. Notable features include support for click events on categorical axes, which improves interactivity, and the addition of CustomJSTicker, allowing for greater customization of axis tick formatting. Furthermore, a new 'open image in a new tab' mode was added to the save tool, enhancing usability for users who wish to save visualizations. These updates build on previous enhancements, focusing on improving performance, usability, and extending Bokeh's capabilities in handling various types of data and visualizations.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.6 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.6 of the Bokeh library, released on 2024-09-26, introduced several key updates including support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool. These updates build on previous enhancements, focusing on improving performance, usability, and extending Bokeh's capabilities in handling various types of data and visualizations.",single_hop_specifc_query_synthesizer
What are the key features introduced in Version 3.0 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 of the Bokeh library marked a major milestone with the removal of Python 3.7 support, the introduction of math text glyphs, and the addition of click event support on categorical axes.",single_hop_specifc_query_synthesizer
What significant changes were introduced in Version 3.0 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
"What are the key features introduced in Version 3.1 of the Bokeh library, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.1 of the Bokeh library introduced several key features that enhance data visualization capabilities, including persistent selection overlays and background/border support for text glyphs. These updates improve the interactivity and visual appeal of plots, allowing developers to create more engaging and informative visualizations.",single_hop_specifc_query_synthesizer
What are the significant updates introduced in Version 3.0 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes.",single_hop_specifc_query_synthesizer
What updates were made in Version 3.1 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 added persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
"What are the key updates introduced in the latest version 3.6 of Bokeh, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","The latest version 3.6 of Bokeh, released on 2024-09-26, introduced several key updates that enhance data visualization capabilities. Notable features include support for click events on categorical axes, which improves interactivity, and the addition of CustomJSTicker, allowing for greater customization of axis tick formatting. Furthermore, a new 'open image in a new tab' mode was added to the save tool, enhancing usability. These updates build on previous enhancements, such as improved layout responsiveness, expanded WebGL support for glyphs, and the introduction of math text glyphs for LaTeX rendering.",single_hop_specifc_query_synthesizer
What updates were introduced in Version 3.1 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 added persistent selection overlays and background/border support for text glyphs.,single_hop_specifc_query_synthesizer
What are the key features introduced in Bokeh Version 3.2?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.2 of the Bokeh library focused on WebGL support for several glyphs and ES module callback support, enhancing performance and integration with modern JavaScript practices.",single_hop_specifc_query_synthesizer
What are the key updates in the latest version of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","The latest version of Bokeh, 3.6, includes several key updates such as support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool. Other significant changes throughout the versions include major redesigns of the layout system, SVG export for grid plots, persistent selection overlays, WebGL support for glyphs, and enhanced usability features like the ColorMap widget and improved AutocompleteInput.",single_hop_specifc_query_synthesizer
What significant features were introduced in Bokeh version 2.4 that would be relevant for a Data Visualization Developer?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 2.4 introduced consolidated RangeUpdate events and LaTeX support for axis labels, which are significant features for enhancing data presentation and visualization capabilities.",single_hop_specifc_query_synthesizer
What are the key updates in Bokeh version 3.6?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Bokeh version 3.6 introduced several key updates, including support for click events on categorical axes, the addition of CustomJSTicker for greater customization of axis tick formatting, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What features were added in Version 3.4 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.4 added significant features like math text glyphs and click events on categorical axes.,single_hop_specifc_query_synthesizer
What are the key updates in the latest version of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","The latest version of Bokeh, 3.6, includes key updates such as support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.1 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.1 of the Bokeh library added persistent selection overlays and background/border support for text glyphs. This version was part of a series of updates that focused on enhancing the library's capabilities and usability.,single_hop_specifc_query_synthesizer
What features were introduced in Version 2.2 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
What notable feature was introduced in Version 3.3 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability.,single_hop_specifc_query_synthesizer
"What are the key features introduced in Version 3.5 of the Bokeh library, and how do they enhance data visualization capabilities?","['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 of the Bokeh library introduced several key features that enhance data visualization capabilities. Notably, it added a new Carbon theme, providing a modern look and feel to visualizations. Additionally, it further enhanced support for math text and click events, which improves interactivity and allows for more complex data representations. However, it also dropped support for Python 3.9, reflecting a trend towards maintaining compatibility with more recent Python versions.",single_hop_specifc_query_synthesizer
What new features are included in Version 3.6 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.6 includes support for click events on categorical axes, the addition of CustomJSTicker, and an 'open image in a new tab' mode for the save tool.",single_hop_specifc_query_synthesizer
What updates were introduced in Version 3.5 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9.",single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.5 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9.",single_hop_specifc_query_synthesizer
What updates were introduced in Version 3.2 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 3.2 focused on WebGL support for several glyphs and ES module callback support.,single_hop_specifc_query_synthesizer
What are the key updates introduced in Version 3.3 of the Bokeh library?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']","Version 3.3 introduced the ColorMap widget, which simplifies the selection of color palettes, and enhanced the usability of AutocompleteInput by allowing matching on any part of input items.",single_hop_specifc_query_synthesizer
What features were introduced in Version 2.2 of Bokeh?,"['Latest Version: 3.6 (Released on 2024-09-26) Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a)  Key Updates in Latest Version: Support for click events on categorical axes Addition of CustomJSTicker Addition of ""open image in a new tab"" mode to save tool a) Summary of Changes Bokeh-Visualization library has undergone significant evolution from its early versions to the latest 3.6 release. Key changes include major redesigns of the layout system in versions prior to 1.1.0, enhancing responsiveness and usability. Version 2.2 introduced SVG export for grid plots and a DocumentReady event. Version 2.4 brought consolidated RangeUpdate events and LaTeX support for axis labels. Version 3.0 marked a major milestone with the removal of Python 3.7 support, introduction of math text glyphs, and click event support on categorical axes. Version 3.1 added persistent selection overlays and background/border support for text glyphs. Version 3.2 focused on WebGL support for several glyphs and ES module callback support. Version 3.3 introduced the ColorMap widget and enhanced AutocompleteInput usability. Version 3.4 added significant features like math text glyphs and click events on categorical axes. Version 3.5 introduced a new Carbon theme and further enhanced math text and click event support, while also dropping support for Python 3.9. Finally, version 3.6 continued to build on these features, adding a CustomJSTicker and an ""open image in a new tab"" mode for the save tool. Throughout these versions, there has been a consistent focus on improving performance, usability, and extending Bokeh\'s capabilities in handling various types of data and visualizations. b) Key Updates Layout System: Major improvements to responsiveness and usability were introduced, making it easier to create complex layouts. WebGL Support: Expanded WebGL support for glyphs like Annulus, Wedge, and AnnularWedge enhances performance for large datasets. ES Module Callbacks: Version 3.2 added support for ES module syntax in callbacks, improving code maintainability and integration with modern JavaScript practices. ColorMap Widget: Version 3.3 introduced a new ColorMap widget, simplifying the selection of color palettes. Accessibility: Version 3.3 made AutocompleteInput more usable by allowing matching on any part of input items. Math Text Glyphs: Version 3.0 introduced support for math text glyphs, enabling LaTeX rendering in various parts of the plot. Click Events on Categorical Axes: Version 3.0 added support for click events on categorical axes, enhancing interactivity. Carbon Theme: Version 3.5 added a new Carbon theme, providing a modern look and feel. CustomJSTicker: Version 3.6 introduced CustomJSTicker, allowing for greater customization of axis tick formatting. Save Tool Enhancement: Version 3.6 added an ""open image in a new tab"" mode to the save tool. Deprecations: Notable deprecations include the removal of plot_width and plot_height in favor of width and height, and the dropping of support for older Python versions (3.6, 3.7, 3.8, 3.9). c) Code Examples (for the latest version 3.6) Click Events on Categorical Axes: ```python from bokeh.plotting import figure, show from bokeh.models import TapTool, CustomJS from bokeh.models import ColumnDataSource fruits = [\'Apples\', \'Pears\', \'Nectarines\', \'Plums\', \'Grapes\', \'Strawberries\'] counts = [5, 3, 4, 2, 4, 6] source = ColumnDataSource(data=dict(fruits=fruits, counts=counts)) p = figure(x_range=fruits, height=350, title=""Fruit Counts"", toolbar_location=None, tools=""tap"") p.vbar(x=\'fruits\', top=\'counts\', width=0.9, source=source) p.xgrid.grid_line_color = None p.y_range.start = 0 CustomJS callback to handle click events on categorical axis callback = CustomJS(args=dict(source=source), code="""""" const indices = cb_data.source.selected.indices; const data = source.data; if (indices.length > 0) { const fruit = data[\'fruits\'][indices[0]]; console.log(""Selected fruit: "" + fruit); } """""") tap_tool = p.select(type=TapTool) tap_tool.callback = callback show(p) ``` CustomJSTicker Example: ```python from bokeh.plotting import figure, show from bokeh.models import LinearAxis, CustomJSTicker p = figure(width=400, height=400) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) CustomJS to format ticks ticker = CustomJSTicker(code="""""" return tick + "" (custom)""; """""") p.yaxis.formatter = ticker show(p) ``` Save Tool with ""Open Image in New Tab"" Mode: ```python from bokeh.plotting import figure, show from bokeh.io import output_file from bokeh.models import SaveTool output_file(""save_tool_example.html"") p = figure(width=400, height=400, tools=[SaveTool(open_image_in_new_tab=True)]) p.circle([1, 2, 3, 4, 5], [2, 5, 8, 2, 7], size=10) show(p) ```']",Version 2.2 introduced SVG export for grid plots and a DocumentReady event.,single_hop_specifc_query_synthesizer
